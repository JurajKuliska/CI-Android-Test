version: 2
jobs:
  build:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-27-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - run:
          name: Create the google play console service key json file
          command: echo $GOOGLE_PLAY_CONSOLE_SERVICE_KEY | base64 --decode > ${HOME}/code/app/keystores/google_play_console_service_key.json
      - run:
          name: gcloud project id
          command: echo $GCLOUD_PROJECT
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      ## The three lines below were initially commented out, however the build was failing so they needed to be included
      - run:
          name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
          command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - run:
          name: Decode release.keystore
          command: |
                mkdir -p $HOME/keystores/
                cd $HOME/keystores/
                echo $ANDROID_KEYSTORE | base64 --decode > release.keystore
                ls $HOME/keystores/
      - run:
          name: Build release apk
          command: ./gradlew assembleRelease
      - store_artifacts:
          path: app/build/outputs/apk/debug/app-release.apk
          destination: apk/app-release.apk
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - persist_to_workspace:
          root: ~/code
          paths:
            - app
            - build
            - build.gradle
            - gradle
            - gradle.properties
            - gradlew
            - gradlew.bat
            - README.md
            - settings.gradle

  unit_test:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-27-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: ~/code
      - run:
          name: Run Tests
          command: ./gradlew lint test
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: app/build/test-results

  ui_test:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-27-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: ~/code
      - run:
          name: UI tests - sudo pip install
          command: sudo pip install -U crcmod
      - run:
          name: UI tests - assembleDebug
          command: ./gradlew :app:assembleDebug -PdisablePreDex
      - store_artifacts:
          path: app/build/outputs/apk/debug/app-debug.apk
          destination: apk/app-debug.apk
      - run:
          name: UI tests - assembleAndroidTest
          command: ./gradlew :app:assembleAndroidTest -PdisablePreDex
      - store_artifacts:
          path: app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk
          destination: apk/app-debug-androidTest.apk
      - run:
          name: UI tests - decode gcloud service key
          command: echo $GCLOUD_SERVICE_KEY | base64 --decode > ${HOME}/gcloud-service-key.json
      - run:
          name: UI tests - set project
          command: sudo gcloud config set project $GCLOUD_PROJECT
      - run:
          name: UI tests - auth activate-service-account
          command: sudo gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json
      - run:
          name: UI tests - run
          command: echo "y" | sudo gcloud beta firebase test android run --type instrumentation --app app/build/outputs/apk/debug/app-debug.apk --test app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk --device model=Nexus6,version=21,locale=en,orientation=portrait --results-bucket ci-android-test
      - run:
          name: UI tests - create ui-tests folder
          command: mkdir /tmp/artifacts
      - run:
          name: UI tests - upload artifacts
          command: sudo gsutil -m cp -r -U `sudo gsutil ls gs://ci-android-test | tail -1` /tmp/artifacts | true
      - store_artifacts:
          path: /tmp/artifacts
          destination: /reports/ui-tests

  publish_to_google_play:
      working_directory: ~/code
      docker:
        - image: circleci/android:api-27-alpha
      environment:
        JVM_OPTS: -Xmx3200m
      steps:
        - attach_workspace:
            # Must be absolute path or relative path from working_directory
            at: ~/code
        - run:
            name: Publish apk release
            command: ./gradlew :app:publishApkRelease -PdisablePreDex

workflows:
  version: 2
  build_and_test:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - unit_test:
          requires:
            - build
          filters:
            tags:
              only: /.*/
      - ui_test:
          requires:
            - build
          filters:
            tags:
              only: /.*/
      - publish_to_google_play:
          requires:
            - build
            - unit_test
            - ui_test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /release-v[0-9]+(\.[0-9]+)*/
